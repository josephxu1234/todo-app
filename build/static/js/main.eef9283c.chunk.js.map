{"version":3,"sources":["components/todo/AuthenticationService.js","components/todo/AuthenticatedRoute.jsx","components/todo/Login.jsx","api/todo/TodoService.js","components/todo/ListTodos.jsx","components/todo/Header.jsx","components/todo/Footer.jsx","components/todo/Logout.jsx","components/todo/Error.jsx","api/todo/HelloWorldService.js","components/todo/Welcome.jsx","components/todo/Todo.jsx","components/todo/TodoApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["username","password","console","log","sessionStorage","setItem","removeItem","getItem","user","AuthenticatedRoute","props","AuthenticationService","userLoggedIn","to","LoginButton","onClick","setloginstate","history","registerSuccessfulLogin","push","Login","useState","setUsername","setPassword","loginState","setLoginState","useHistory","type","name","value","onChange","event","target","className","axios","get","id","delete","todo","put","ListTodos","todos","setTodos","numTodos","setNumTodos","useEffect","getUsername","TodoService","retrieveAllTodos","then","response","data","length","map","description","done","toString","moment","targetDate","format","deleteTodo","class","withRouter","isUserLoggedIn","logout","Footer","Logout","Error","Welcome","message","setMessage","match","params","HelloWorldService","executeHelloWorldPathVariableService","catch","retrieveWelcome","validate","values","errors","desc","date","isValid","Todo","setDesc","Date","setDate","retrieveTodo","initialValues","onSubmit","createTodo","updateTodo","validateOnChange","validateOnBlur","enableReinitialize","component","TodoApp","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAsBe,M,uGArBX,SAAwBA,EAAUC,GAC9BC,QAAQC,IAAI,WACZC,eAAeC,QAAQ,WAAYL,K,oBAEvC,WACII,eAAeE,WAAW,c,0BAG9B,WAEI,OAAa,OADFF,eAAeG,QAAQ,c,yBAKtC,WACI,IAAIC,EAAOJ,eAAeG,QAAQ,YAClC,OAAa,OAATC,EAAsB,GACnBA,M,aCAAC,MAbf,SAA4BC,GACxB,OAAIC,EAAsBC,eAElB,cAAC,IAAD,eAAWF,IAKX,cAAC,IAAD,CAAUG,GAAG,Y,QCmBzB,SAASC,EAAYJ,GACjB,OACI,8BACI,wBAAQK,QAAS,kBAKTf,EAL0BU,EAAMV,SAKtBC,EALgCS,EAAMT,SAK5Be,EALsCN,EAAMM,cAK7BC,EAL4CP,EAAMO,aAMpF,iBAAbjB,GAA4C,aAAbC,GAC/BU,EAAsBO,wBAAwBlB,EAAUC,GACxDC,QAAQC,IAAI,0BACZa,EAvCc,GAwCdC,EAAQE,KAAR,mBAAyBnB,MAGzBE,QAAQC,IAAI,UACZa,EA3CW,KAkCnB,IAAoBhB,EAAUC,EAAUe,EAAeC,GAL3C,uBAkBGG,MA7Cf,WAEI,MAAgCC,mBAAS,YAAzC,mBAAOrB,EAAP,KAAiBsB,EAAjB,KACA,EAAgCD,mBAAS,YAAzC,mBAAOpB,EAAP,KAAiBsB,EAAjB,KACA,EAAoCF,mBARnB,GAQjB,mBAAOG,EAAP,KAAmBC,EAAnB,KACMR,EAAUS,cAChB,OACI,gCACI,2CAEI,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,MAAO7B,EAAU8B,SAAU,SAACC,GAAD,OAAWT,EAAYS,EAAMC,OAAOH,aAGtG,2CAEI,uBAAOF,KAAK,OAAOC,KAAK,WAAWC,MAAO5B,EAAU6B,SAAU,SAACC,GAAD,OAAWR,EAAYQ,EAAMC,OAAOH,aAEtG,cAACf,EAAD,CAAamB,UAAU,kBAAkBjC,SAAUA,EAAUC,SAAUA,EAAUe,cAAeS,EAAeR,QAASA,IApB9G,IAqBTO,GAAgC,iDApB1B,IAqBNA,GAA6B,qBAAKS,UAAU,sBAAf,6B,iBCH3B,M,gGArBX,SAAiBL,GACb,OAAOM,IAAMC,IAAN,sCAAyCP,EAAzC,a,wBAGX,SAAWA,EAAMQ,GACb,OAAOF,IAAMG,OAAN,sCAA4CT,EAA5C,kBAA0DQ,M,0BAGrE,SAAaR,EAAMQ,GACf,OAAOF,IAAMC,IAAN,sCAAyCP,EAAzC,kBAAuDQ,M,wBAGlE,SAAWR,EAAMQ,EAAIE,GACjB,OAAOJ,IAAMK,IAAN,sCAAyCX,EAAzC,kBAAuDQ,GAAME,K,wBAGxE,SAAWV,EAAMU,GACb,OAAOJ,IAAMK,IAAN,sCAAyCX,EAAzC,UAAuDU,O,uBCkDvDE,MAhEf,WACI,MAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAgCrB,mBAAS,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACM3B,EAAUS,cAWhB,OATAmB,qBAAU,WACN,IAAI7C,EAAWW,EAAsBmC,cACrCC,EAAYC,iBAAiBhD,GAAUiD,MACnC,SAAAC,GACIR,EAASQ,EAASC,MAClBP,EAAYH,EAAMW,aAG3B,CAACT,IAEA,gCACI,uCAEA,sBAAKV,UAAU,YAAf,UACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,6CACA,+CACA,6CACA,wCACA,6CAIR,gCAEQQ,EAAMY,KACF,SAAAf,GAAI,OACA,+BACI,6BAAKA,EAAKgB,cACV,6BAAKhB,EAAKiB,KAAKC,aACf,6BAAKC,IAAOnB,EAAKoB,YAAYC,OAAO,gBACpC,mCAAK,wBAAQ1B,UAAU,kBAAkBlB,QAAS,kBAAME,EAAQE,KAAR,iBAAuBmB,EAAKF,MAA/E,sBAAL,OACA,mCAAK,wBAAQH,UAAU,kBAAkBlB,QAAS,YAoB1F,SAAoBqB,GAChB,IAAIR,EAAOjB,EAAsBmC,cACjCC,EAAYa,WAAWhC,EAAMQ,GAtBiEwB,CAAWtB,EAAKF,IAAKQ,EAAYD,EAAW,IAAjG,sBAAL,SALKL,EAAKF,YAYlC,qBAAKyB,MAAM,MAAX,SACI,wBAAQ5B,UAAY,kBAAkBlB,QAAS,kBAAME,EAAQE,KAAR,cAArD,4BC5BL2C,mBApBf,WACI,IAAMC,EAAiBpD,EAAsBC,eAE7C,OADAV,QAAQC,IAAI4D,GAER,iCACI,sBAAK9B,UAAU,8CAAf,UACI,8BAAK,oBAAIA,UAAU,eAAd,4BACL,qBAAIA,UAAU,aAAd,UACK8B,GAAkB,mCAAqB,cAAC,IAAD,CAAMlD,GAAG,wBAAwBoB,UAAU,WAA3C,oBAAX,WAC5B8B,GAAkB,mCAAmB,cAAC,IAAD,CAAMlD,GAAG,SAASoB,UAAU,WAA5B,qBAAT,YAEjC,qBAAIA,UAAU,iDAAd,WACM8B,GAAkB,mCAAmB,cAAC,IAAD,CAAMlD,GAAG,SAASoB,UAAU,WAA5B,sBAAT,SAC7B8B,GAAkB,mCAAoB,cAAC,IAAD,CAAMlD,GAAG,UAAUoB,UAAU,WAAWlB,QAASJ,EAAsBqD,OAAvE,uBAAV,qBCTlCC,MARf,WACI,OACI,wBAAQhC,UAAU,SAAlB,SACI,sBAAMA,UAAU,aAAhB,qCCSGiC,MAXf,WACI,OACI,gCACI,sDACA,qBAAKjC,UAAU,YAAf,sDCGGkC,MARf,WACI,OACI,sDCcO,M,wGAdX,WACI,OAAOjC,IAAMC,IAAI,uC,0CAGrB,WACI,OAAOD,IAAMC,IAAI,4C,kDAGrB,SAAqCP,GACjC,OAAOM,IAAMC,IAAN,0DAA6DP,Q,MCmB7DwC,MA3Bf,SAAiB1D,GAEb,MAA8BW,mBAAS,IAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KACI1C,EAAOlB,EAAM6D,MAAMC,OAAO5C,KAC9B,OACI,gCACI,4CACA,sBAAKK,UAAU,YAAf,qBACaL,EADb,+BAC8C,cAAC,IAAD,CAAMf,GAAG,SAAT,uBAE9C,sBAAKoB,UAAU,YAAf,qDAC4C,wBAAQA,UAAY,kBAAkBlB,QAAW,kBAUzG,SAAyBuD,EAAY1C,GACjC6C,EAAkBC,qCAAqC9C,GACtDqB,MAAK,SAACC,GAAD,OAAcoB,EAAWpB,EAASC,KAAKkB,YAC5CM,QAb0GC,CAAgBN,EAAY1C,IAAnF,8BAG5C,8BACKyC,Q,QCqEjB,SAASQ,EAASC,GACd,IAAIC,EAAS,GAQb,OAPKD,EAAOE,OACRD,EAAOC,KAAO,uBAGbvB,IAAOqB,EAAOG,MAAMC,YACrBH,EAAOE,KAAO,6BAEXF,EAGII,MA5Ff,SAAczE,GACV,IAAI0B,EAAK1B,EAAM6D,MAAMC,OAAOpC,GACxBR,EAAOjB,EAAsBmC,cAEjC,EAAwBzB,mBAAS,IAAjC,mBAAO2D,EAAP,KAAaI,EAAb,KACA,EAAwB/D,mBAASoC,IAAO,IAAI4B,MAAQ1B,OAAO,eAA3D,mBAAOsB,EAAP,KAAaK,EAAb,KACMrE,EAAUS,cAyChB,OAvCAmB,qBAAU,YACM,IAART,GAGJW,EAAYwC,aAAa3D,EAAMQ,GAAIa,MAC/B,SAAAC,GACIkC,EAAQlC,EAASC,KAAKG,aACtBgC,EAAQ7B,IAAOP,EAASC,KAAKO,YAAYC,OAAO,eAChDzD,QAAQC,IAAI,aAgCpB,gCACI,wCACA,qBAAK8B,UAAU,YAAf,SACI,cAAC,IAAD,CAAQuD,cAAe,CAAER,OAAMC,OAAM7C,MAAMqD,SA9BvD,SAAgBX,GACZ,IAAIlD,EAAOjB,EAAsBmC,cAC7BR,EAAO,CACPF,GAAI0C,EAAO1C,GACXkB,YAAawB,EAAOE,KACpBtB,WAAYoB,EAAOG,MAEvB,IAAY,IAAR7C,EAEAW,EAAY2C,WAAW9D,EAAMU,GAAMW,MAE/B,WACIhC,EAAQE,KAAR,iBAIP,CACD,IAAIS,EAAOjB,EAAsBmC,cACjCC,EAAY4C,WAAW/D,EAAMkD,EAAO1C,GAAIE,GAAMW,MAE1C,WACIhC,EAAQE,KAAR,eASyD0D,SAAUA,EAAUe,kBAAkB,EAAOC,gBAAgB,EAAOC,oBAAoB,EAArJ,SAEQ,SAACpF,GAAD,OAEQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAckB,KAAK,OAAOmE,UAAU,MAAM9D,UAAU,wBACpD,cAAC,IAAD,CAAcL,KAAK,OAAOmE,UAAU,MAAM9D,UAAU,wBAEpD,2BAAUA,UAAU,aAApB,UACI,iDACA,cAAC,IAAD,CAAOA,UAAU,eAAeN,KAAK,OAAOC,KAAK,YAGrD,2BAAUK,UAAU,aAApB,UACI,iDACA,cAAC,IAAD,CAAOA,UAAU,eAAeN,KAAK,OAAOC,KAAK,YAErD,wBAAQK,UAAU,kBAAkBN,KAAK,SAAzC,gCC3CrBqE,MArBf,WACI,OACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACH,UAAW3E,IACjC,cAAC,IAAD,CAAO6E,KAAK,SAASC,OAAK,EAACH,UAAW3E,IACtC,cAAC,EAAD,CAAoB6E,KAAK,iBAAiBC,OAAK,EAACH,UAAW3B,IAC3D,cAAC,EAAD,CAAoB6B,KAAK,aAAaC,OAAK,EAACH,UAAWZ,IACvD,cAAC,EAAD,CAAoBc,KAAK,SAASC,OAAK,EAACH,UAAWvD,IACnD,cAAC,EAAD,CAAoByD,KAAK,UAAUC,OAAK,EAACH,UAAW7B,IACpD,cAAC,IAAD,CAAO6B,UAAW5B,OAEtB,cAAC,EAAD,UCfDgC,MARf,WACE,OACE,qBAAKlE,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eef9283c.chunk.js","sourcesContent":["class AuthenticationService {\r\n    registerSuccessfulLogin(username, password) {\r\n        console.log(\"success\")\r\n        sessionStorage.setItem('authUser', username);\r\n    }\r\n    logout() {\r\n        sessionStorage.removeItem('authUser');\r\n    }\r\n\r\n    userLoggedIn() {\r\n        let user = sessionStorage.getItem('authUser');\r\n        if (user === null) return false;\r\n        return true;\r\n    }\r\n\r\n    getUsername() {\r\n        let user = sessionStorage.getItem('authUser');\r\n        if (user === null) return '';\r\n        return user;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nfunction AuthenticatedRoute(props) {\r\n    if (AuthenticationService.userLoggedIn()) {\r\n        return (\r\n            <Route {...props} />\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst UNINIT_LOGIN = 0;\r\nconst SUCCESS_LOGIN = 1;\r\nconst FAIL_LOGIN = 2;\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('username');\r\n    const [password, setPassword] = useState('password');\r\n    const [loginState, setLoginState] = useState(UNINIT_LOGIN);\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <div>\r\n                Username\r\n                <input type=\"text\" name=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </div>\r\n\r\n            <div>\r\n                Password\r\n                <input type=\"text\" name=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n            </div>\r\n            <LoginButton className=\"btn btn-success\" username={username} password={password} setloginstate={setLoginState} history={history} />\r\n            {loginState === SUCCESS_LOGIN && <div> LOGIN SUCCESS</div>}\r\n            {loginState === FAIL_LOGIN && <div className=\"alert alert-warning\"> LOGIN FAIL</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoginButton(props) {\r\n    return (\r\n        <div>\r\n            <button onClick={() => loginClick(props.username, props.password, props.setloginstate, props.history)}> Login </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction loginClick(username, password, setloginstate, history) {\r\n    if (username === \"josephxu1234\" && password === \"password\") {\r\n        AuthenticationService.registerSuccessfulLogin(username, password);\r\n        console.log(\"Authentication success\");\r\n        setloginstate(SUCCESS_LOGIN);\r\n        history.push(`/welcome/${username}`);\r\n    }\r\n    else {\r\n        console.log(\"Failed\");\r\n        setloginstate(FAIL_LOGIN);\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\n\nclass TodoService {\n    retrieveAllTodos(name) {\n        return axios.get(`http://localhost:8080/users/${name}/todos`);\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`http://localhost:8080/users/${name}/todos/${id}`, todo);\n    }\n\n    createTodo(name, todo) {\n        return axios.put(`http://localhost:8080/users/${name}/todos`, todo);\n    }\n}\n\nexport default new TodoService();","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TodoService from '../../api/todo/TodoService.js';\r\nimport moment from 'moment';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nfunction ListTodos() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [numTodos, setNumTodos] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let username = AuthenticationService.getUsername();\r\n        TodoService.retrieveAllTodos(username).then(\r\n            response => {\r\n                setTodos(response.data);\r\n                setNumTodos(todos.length)\r\n            }\r\n        );\r\n    }, [numTodos])\r\n    return (\r\n        <div>\r\n            <h1>Todos</h1>\r\n\r\n            <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Is completed?</th>\r\n                            <th>Target Date</th>\r\n                            <th>Update</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            todos.map(\r\n                                todo =>\r\n                                    <tr key={todo.id}>\r\n                                        <td>{todo.description}</td>\r\n                                        <td>{todo.done.toString()}</td>\r\n                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                        <td> <button className=\"btn btn-success\" onClick={() => history.push(`/todos/${todo.id}`)}> Update </button> </td>\r\n                                        <td> <button className=\"btn btn-warning\" onClick={() => { deleteTodo(todo.id); setNumTodos(numTodos - 1) }}> Delete </button> </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"row\">\r\n                    <button className = \"btn btn-success\" onClick={() => history.push(`/todos/-1`)}> Add </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction updateTodo(props, id) {\r\n\r\n    console.log(\"update clicked\" + id);\r\n}\r\n\r\nfunction deleteTodo(id) {\r\n    let name = AuthenticationService.getUsername();\r\n    TodoService.deleteTodo(name, id);\r\n\r\n}\r\nexport default ListTodos;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withRouter} from 'react-router';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nfunction Header() {\r\n    const isUserLoggedIn = AuthenticationService.userLoggedIn();\r\n    console.log(isUserLoggedIn);\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <div><h1 className=\"navbar-brand\">josephxu1234</h1></div>\r\n                <ul className=\"navbar-nav\">\r\n                    {isUserLoggedIn && <li key = \"welcome\"> <Link to=\"/welcome/josephxu1234\" className=\"nav-link\">Home</Link></li>}\r\n                    {isUserLoggedIn && <li key = \"todos\"> <Link to=\"/todos\" className=\"nav-link\">Todos</Link></li>}\r\n                </ul>\r\n                <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n                    {!isUserLoggedIn && <li key = \"login\"> <Link to=\"/login\" className=\"nav-link\">Login </Link></li>}\r\n                    {isUserLoggedIn && <li key = \"logout\"> <Link to=\"/logout\" className=\"nav-link\" onClick={AuthenticationService.logout}>Logout </Link></li>}\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"text-muted\"> All Rights Reserved</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Logout() {\r\n    return (\r\n        <div>\r\n            <h1> You are logged out </h1>\r\n            <div className=\"container\">\r\n                Thank you for using this application\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nfunction Error() {\r\n    return (\r\n        <div>\r\n            Error! Wrong path!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import axios from 'axios';\n\nclass HelloWorldService {\n    executeHelloWorldService() {\n        return axios.get('http://localhost:8080/hello-world');\n    }\n\n    executeHelloWorldBeanService() {\n        return axios.get('http://localhost:8080/hello-world-bean');\n    }\n\n    executeHelloWorldPathVariableService(name) {\n        return axios.get(`http://localhost:8080/hello-world/path-variable/${name}`)\n\n    }\n}\n\nexport default new HelloWorldService();","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport HelloWorldService from '../../api/todo/HelloWorldService.js';\r\n\r\nfunction Welcome(props) {\r\n\r\n    const [message, setMessage] = useState('');\r\n    let name = props.match.params.name;\r\n    return (\r\n        <div>\r\n            <h1> Welcome! </h1>\r\n            <div className=\"container\">\r\n                Welcome {name}! You can manage your todos <Link to='/todos'> here </Link>\r\n            </div>\r\n            <div className=\"container\">\r\n                Click here for a custom welcome message <button className = \"btn btn-success\" onClick = {() => retrieveWelcome(setMessage, name)}> Click here! </button>\r\n            </div>\r\n\r\n            <div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction retrieveWelcome(setMessage, name) {\r\n    HelloWorldService.executeHelloWorldPathVariableService(name)\r\n    .then((response) => setMessage(response.data.message))\r\n    .catch();\r\n}\r\n\r\nexport default Welcome;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoService from '../../api/todo/TodoService.js';\nimport AuthenticationService from './AuthenticationService';\n\n\nfunction Todo(props) {\n    let id = props.match.params.id;\n    let name = AuthenticationService.getUsername();\n\n    const [desc, setDesc] = useState('');\n    const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n    const history = useHistory();\n\n    useEffect(() => {\n        if (id === -1) {\n            return;\n        }\n        TodoService.retrieveTodo(name, id).then(\n            response => {\n                setDesc(response.data.description);\n                setDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n                console.log(\"set\");\n            }\n        )\n    })\n\n    function submit(values) {\n        let name = AuthenticationService.getUsername();\n        let todo = {\n            id: values.id,\n            description: values.desc,\n            targetDate: values.date\n        }\n        if (id === -1) {\n\n            TodoService.createTodo(name, todo).then(\n\n                () => {\n                    history.push(`/todos`)\n                }\n            )\n        }\n        else {\n            let name = AuthenticationService.getUsername();\n            TodoService.updateTodo(name, values.id, todo).then(\n\n                () => {\n                    history.push(`/todos`)\n                }\n            )\n        }\n    }\n    return (\n        <div>\n            <h1> Todo </h1>\n            <div className=\"container\">\n                <Formik initialValues={{ desc, date, id }} onSubmit={submit} validate={validate} validateOnChange={false} validateOnBlur={false} enableReinitialize={true}>\n                    {\n                        (props) =>\n                            (\n                                <Form>\n                                    <ErrorMessage name=\"desc\" component=\"div\" className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"date\" component=\"div\" className=\"alert alert-warning\" />\n\n                                    <fieldset className=\"form-group\">\n                                        <label> Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"desc\" />\n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\">\n                                        <label> Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"date\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\"> Save </button>\n                                </Form>\n                            )\n                    }\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\n\n\nfunction validate(values) {\n    let errors = {};\n    if (!values.desc) {\n        errors.desc = 'Enter a description'\n    }\n\n    if (!moment(values.date).isValid()) {\n        errors.date = \"Enter a valid target date\"\n    }\n    return errors;\n}\n\nexport default Todo;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx';\r\nimport Login from './Login.jsx';\r\nimport ListTodos from './ListTodos.jsx';\r\nimport Header from './Header.jsx';\r\nimport Footer from './Footer.jsx';\r\nimport Logout from './Logout.jsx';\r\nimport Error from './Error.jsx';\r\nimport Welcome from './Welcome.jsx';\r\nimport Todo from './Todo.jsx';\r\n\r\nfunction TodoApp() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Login} />\r\n                    <Route path=\"/login\" exact component={Login} />\r\n                    <AuthenticatedRoute path=\"/welcome/:name\" exact component={Welcome} />\r\n                    <AuthenticatedRoute path=\"/todos/:id\" exact component={Todo} />\r\n                    <AuthenticatedRoute path=\"/todos\" exact component={ListTodos} />\r\n                    <AuthenticatedRoute path=\"/logout\" exact component={Logout} />\r\n                    <Route component={Error} />\r\n                </Switch>\r\n                <Footer />\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TodoApp;","import './App.css';\nimport './bootstrap.css'\nimport TodoApp from './components/todo/TodoApp'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}