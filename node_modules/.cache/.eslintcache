[{"/home/joseph/Desktop/gotrust/todo-app/src/index.js":"1","/home/joseph/Desktop/gotrust/todo-app/src/App.js":"2","/home/joseph/Desktop/gotrust/todo-app/src/reportWebVitals.js":"3","/home/joseph/Desktop/gotrust/todo-app/src/components/counter/Counter.jsx":"4","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/TodoApp.jsx":"5","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Login.jsx":"6","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/AuthenticatedRoute.jsx":"7","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/ListTodos.jsx":"8","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Footer.jsx":"9","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Logout.jsx":"10","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Welcome.jsx":"11","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Error.jsx":"12","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Header.jsx":"13","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/AuthenticationService.js":"14","/home/joseph/Desktop/gotrust/todo-app/src/api/todo/HelloWorldService.js":"15","/home/joseph/Desktop/gotrust/todo-app/src/api/todo/TodoService.js":"16","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Todo.jsx":"17","/home/joseph/Desktop/gotrust/todo-app/src/Config.js":"18"},{"size":500,"mtime":1623277856316,"results":"19","hashOfConfig":"20"},{"size":203,"mtime":1623282684265,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1623277856316,"results":"22","hashOfConfig":"20"},{"size":1507,"mtime":1623277856316,"results":"23","hashOfConfig":"20"},{"size":1242,"mtime":1624484089564,"results":"24","hashOfConfig":"20"},{"size":2499,"mtime":1628047121269,"results":"25","hashOfConfig":"20"},{"size":463,"mtime":1623277856316,"results":"26","hashOfConfig":"20"},{"size":2596,"mtime":1628054301696,"results":"27","hashOfConfig":"20"},{"size":223,"mtime":1623277856316,"results":"28","hashOfConfig":"20"},{"size":289,"mtime":1623277856316,"results":"29","hashOfConfig":"20"},{"size":1026,"mtime":1626459916964,"results":"30","hashOfConfig":"20"},{"size":159,"mtime":1623277856316,"results":"31","hashOfConfig":"20"},{"size":1264,"mtime":1623282843758,"results":"32","hashOfConfig":"20"},{"size":2108,"mtime":1628048371247,"results":"33","hashOfConfig":"20"},{"size":531,"mtime":1628047791884,"results":"34","hashOfConfig":"20"},{"size":673,"mtime":1628052386099,"results":"35","hashOfConfig":"20"},{"size":3354,"mtime":1628054347224,"results":"36","hashOfConfig":"20"},{"size":177,"mtime":1628187762500,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15eldiy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joseph/Desktop/gotrust/todo-app/src/index.js",[],["79","80"],"/home/joseph/Desktop/gotrust/todo-app/src/App.js",[],"/home/joseph/Desktop/gotrust/todo-app/src/reportWebVitals.js",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/counter/Counter.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/TodoApp.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Login.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/AuthenticatedRoute.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/ListTodos.jsx",["81","82"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TodoService from '../../api/todo/TodoService.js';\r\nimport moment from 'moment';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nfunction ListTodos() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [numTodos, setNumTodos] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let username = AuthenticationService.getUsername();\r\n        TodoService.retrieveAllTodos(username).then(\r\n            response => {\r\n                setTodos(response.data);\r\n                setNumTodos(todos.length)\r\n            }\r\n        );\r\n    }, [numTodos])\r\n    return (\r\n        <div>\r\n            <h1>Todos</h1>\r\n\r\n            <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Is completed?</th>\r\n                            <th>Target Date</th>\r\n                            <th>Update</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            todos.map(\r\n                                todo =>\r\n                                    <tr key={todo.id}>\r\n                                        <td>{todo.description}</td>\r\n                                        <td>{todo.done.toString()}</td>\r\n                                        <td>{moment.utc(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                        <td> <button className=\"btn btn-success\" onClick={() => history.push(`/todos/${todo.id}`)}> Update </button> </td>\r\n                                        <td> <button className=\"btn btn-warning\" onClick={() => { deleteTodo(todo.id); setNumTodos(numTodos - 1) }}> Delete </button> </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"row\">\r\n                    <button className = \"btn btn-success\" onClick={() => history.push(`/todos/-1`)}> Add </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction updateTodo(props, id) {\r\n\r\n    console.log(\"update clicked\" + id);\r\n}\r\n\r\nfunction deleteTodo(id) {\r\n    let name = AuthenticationService.getUsername();\r\n    TodoService.deleteTodo(name, id);\r\n}\r\nexport default ListTodos;","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Footer.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Logout.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Welcome.jsx",["83","84"],"import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport HelloWorldService from '../../api/todo/HelloWorldService.js';\r\n\r\nfunction Welcome(props) {\r\n\r\n    const [message, setMessage] = useState('');\r\n    let name = props.match.params.name;\r\n    return (\r\n        <div>\r\n            <h1> Welcome! </h1>\r\n            <div className=\"container\">\r\n                Welcome {name}! You can manage your todos <Link to='/todos'> here </Link>\r\n            </div>\r\n            {/*<div className=\"container\">\r\n                Click here for a custom welcome message <button className = \"btn btn-success\" onClick = {() => retrieveWelcome(setMessage, name)}> Click here! </button>\r\n    </div>*/}\r\n\r\n            <div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction retrieveWelcome(setMessage, name) {\r\n    HelloWorldService.executeHelloWorldPathVariableService(name)\r\n    .then((response) => setMessage(response.data.message))\r\n    .catch();\r\n}\r\n\r\nexport default Welcome;","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Error.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Header.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/AuthenticationService.js",[],"/home/joseph/Desktop/gotrust/todo-app/src/api/todo/HelloWorldService.js",["85","86"],"import axios from 'axios';\n\nclass HelloWorldService {\n    executeHelloWorldService() {\n        return axios.get('http://localhost:8080/hello-world');\n    }\n\n    executeHelloWorldBeanService() {\n        return axios.get('http://localhost:8080/hello-world-bean');\n    }\n\n    executeHelloWorldPathVariableService(name) {\n        let user = 'josephxu1234';\n        let password = 'password';\n\n        \n        return axios.get(`http://localhost:8080/hello-world/path-variable/${name}`)\n\n    }\n}\n\nexport default new HelloWorldService();","/home/joseph/Desktop/gotrust/todo-app/src/api/todo/TodoService.js",["87"],"import axios from \"axios\";\nimport {API_URL, JPA_API_URL} from '../../Config.js';\n\nclass TodoService {\n\n    retrieveAllTodos(name) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo);\n    }\n\n    createTodo(name, todo) {\n        return axios.put(`${JPA_API_URL}/users/${name}/todos`, todo);\n    }\n}\n\nexport default new TodoService();","/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Todo.jsx",[],"/home/joseph/Desktop/gotrust/todo-app/src/Config.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":20,"column":8,"nodeType":"94","endLine":20,"endColumn":18,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":61,"column":10,"nodeType":"98","messageId":"99","endLine":61,"endColumn":20},{"ruleId":"96","severity":1,"message":"100","line":7,"column":21,"nodeType":"98","messageId":"99","endLine":7,"endColumn":31},{"ruleId":"96","severity":1,"message":"101","line":26,"column":10,"nodeType":"98","messageId":"99","endLine":26,"endColumn":25},{"ruleId":"96","severity":1,"message":"102","line":13,"column":13,"nodeType":"98","messageId":"99","endLine":13,"endColumn":17},{"ruleId":"96","severity":1,"message":"103","line":14,"column":13,"nodeType":"98","messageId":"99","endLine":14,"endColumn":21},{"ruleId":"96","severity":1,"message":"104","line":2,"column":9,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todos.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumTodos' needs the current value of 'todos.length'.","ArrayExpression",["107"],"no-unused-vars","'updateTodo' is defined but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","'retrieveWelcome' is defined but never used.","'user' is assigned a value but never used.","'password' is assigned a value but never used.","'API_URL' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [numTodos, todos.length]",{"range":"110","text":"111"},[695,705],"[numTodos, todos.length]"]