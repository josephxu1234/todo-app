{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Todo.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useHistory } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoService from '../../api/todo/TodoService.js';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  let id = props.match.params.id;\n  let name = AuthenticationService.getUsername();\n  const [desc, setDesc] = useState('');\n  const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n  useEffect(() => {\n    console.log(\"effect triggered\");\n    TodoService.retrieveTodo(name, id).then(response => {\n      setDesc(response.data.description);\n      setDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n      console.log(\"set\");\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          desc,\n          date,\n          id\n        },\n        onSubmit: submit,\n        validate: validate,\n        validateOnChange: false,\n        validateOnBlur: false,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"desc\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"date\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"desc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"date\",\n              name: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            children: \" Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"Ouf9cdKEYqxpsyz1/jkntkZtQH4=\");\n\n_c = Todo;\n\nfunction submit(values) {\n  _s2();\n\n  const history = useHistory();\n  let name = AuthenticationService.getUsername();\n  TodoService.updateTodo(name, values.id, {\n    id: values.id,\n    description: values.desc,\n    targetDate: values.date\n  }).then(() => {\n    history.push(`/todos`);\n  });\n}\n\n_s2(submit, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\nfunction validate(values) {\n  let errors = {};\n\n  if (!values.desc) {\n    errors.desc = 'Enter a description';\n  }\n\n  if (!moment(values.date).isValid()) {\n    errors.date = \"Enter a valid target date\";\n  }\n\n  return errors;\n}\n\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Todo.jsx"],"names":["React","useState","useEffect","useHistory","moment","Formik","Form","Field","ErrorMessage","TodoService","AuthenticationService","Todo","props","id","match","params","name","getUsername","desc","setDesc","date","setDate","Date","format","console","log","retrieveTodo","then","response","data","description","targetDate","submit","validate","values","history","updateTodo","push","errors","isValid"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAiD,QAAjD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,MAAIC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AACA,MAAIG,IAAI,GAAGN,qBAAqB,CAACO,WAAtB,EAAX;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAACG,MAAM,CAAC,IAAIkB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAD,CAAhC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAhB,IAAAA,WAAW,CAACiB,YAAZ,CAAyBV,IAAzB,EAA+BH,EAA/B,EAAmCc,IAAnC,CACIC,QAAQ,IAAI;AACRT,MAAAA,OAAO,CAACS,QAAQ,CAACC,IAAT,CAAcC,WAAf,CAAP;AACAT,MAAAA,OAAO,CAACjB,MAAM,CAACwB,QAAQ,CAACC,IAAT,CAAcE,UAAf,CAAN,CAAiCR,MAAjC,CAAwC,YAAxC,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KALL;AAOH,GATQ,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAE;AAACP,UAAAA,IAAD;AAAOE,UAAAA,IAAP;AAAaP,UAAAA;AAAb,SAAvB;AAAyC,QAAA,QAAQ,EAAImB,MAArD;AAA6D,QAAA,QAAQ,EAAIC,QAAzE;AAAmF,QAAA,gBAAgB,EAAE,KAArG;AAA4G,QAAA,cAAc,EAAE,KAA5H;AAAmI,QAAA,kBAAkB,EAAE,IAAvJ;AAAA,kBAESrB,KAAD,iBAEA,QAAC,IAAD;AAAA,kCACI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAG,MAArB;AAA4B,YAAA,SAAS,EAAG,KAAxC;AAA8C,YAAA,SAAS,EAAG;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAG,MAArB;AAA4B,YAAA,SAAS,EAAG,KAAxC;AAA8C,YAAA,SAAS,EAAG;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAU,YAAA,SAAS,EAAG,YAAtB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAG,cAAnB;AAAkC,cAAA,IAAI,EAAG,MAAzC;AAAgD,cAAA,IAAI,EAAG;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eASI;AAAU,YAAA,SAAS,EAAG,YAAtB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAG,cAAnB;AAAkC,cAAA,IAAI,EAAG,MAAzC;AAAgD,cAAA,IAAI,EAAG;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAaI;AAAQ,YAAA,SAAS,EAAG,iBAApB;AAAsC,YAAA,IAAI,EAAG,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA7CQD,I;;KAAAA,I;;AA+CT,SAASqB,MAAT,CAAgBE,MAAhB,EACA;AAAA;;AACI,QAAMC,OAAO,GAAGhC,UAAU,EAA1B;AACA,MAAIa,IAAI,GAAGN,qBAAqB,CAACO,WAAtB,EAAX;AACAR,EAAAA,WAAW,CAAC2B,UAAZ,CAAuBpB,IAAvB,EAA6BkB,MAAM,CAACrB,EAApC,EAAwC;AACpCA,IAAAA,EAAE,EAACqB,MAAM,CAACrB,EAD0B;AAEpCiB,IAAAA,WAAW,EAAEI,MAAM,CAAChB,IAFgB;AAGpCa,IAAAA,UAAU,EAAEG,MAAM,CAACd;AAHiB,GAAxC,EAIGO,IAJH,CAMI,MAAM;AACFQ,IAAAA,OAAO,CAACE,IAAR,CAAc,QAAd;AACH,GARL;AAUH;;IAdQL,M;UAEW7B,U;;;AAcpB,SAAS8B,QAAT,CAAkBC,MAAlB,EACA;AACI,MAAII,MAAM,GAAG,EAAb;;AACA,MAAI,CAACJ,MAAM,CAAChB,IAAZ,EAAkB;AACdoB,IAAAA,MAAM,CAACpB,IAAP,GAAc,qBAAd;AACH;;AAED,MAAG,CAACd,MAAM,CAAC8B,MAAM,CAACd,IAAR,CAAN,CAAoBmB,OAApB,EAAJ,EAAmC;AAC/BD,IAAAA,MAAM,CAAClB,IAAP,GAAc,2BAAd;AACH;;AACD,SAAOkB,MAAP;AACH;;AAED,eAAe3B,IAAf","sourcesContent":["import React, {useState, useEffect, useHistory}from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\nimport TodoService from '../../api/todo/TodoService.js';\nimport AuthenticationService from './AuthenticationService';\n\n\nfunction Todo(props) {\n    let id = props.match.params.id;\n    let name = AuthenticationService.getUsername();\n    const [desc, setDesc] = useState('');\n    const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n\n    useEffect(() => {\n        console.log(\"effect triggered\");\n        TodoService.retrieveTodo(name, id).then(\n            response => {\n                setDesc(response.data.description);\n                setDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n                console.log(\"set\");\n            }\n        )\n    })\n    return(\n        <div>\n            <h1> Todo </h1>\n            <div className = \"container\"> \n                <Formik initialValues={{desc, date, id}} onSubmit = {submit} validate = {validate} validateOnChange={false} validateOnBlur={false} enableReinitialize={true}> \n                    {\n                        (props) =>\n                        (\n                        <Form>\n                            <ErrorMessage name = \"desc\" component = \"div\" className = \"alert alert-warning\"/>\n                            <ErrorMessage name = \"date\" component = \"div\" className = \"alert alert-warning\"/>   \n\n                            <fieldset className = \"form-group\"> \n                                <label> Description</label>\n                                <Field className = \"form-control\" type = \"text\" name = \"desc\"/>\n                            </fieldset>\n\n                            <fieldset className = \"form-group\"> \n                                <label> Target Date</label>\n                                <Field className = \"form-control\" type = \"date\" name = \"date\"/>\n                            </fieldset>\n                            <button className = \"btn btn-success\" type = \"submit\"> Save </button>\n                        </Form>\n                        )\n                    }\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nfunction submit(values)\n{\n    const history = useHistory();\n    let name = AuthenticationService.getUsername();\n    TodoService.updateTodo(name, values.id, {\n        id:values.id,\n        description: values.desc,\n        targetDate: values.date\n    }).then(\n\n        () => {\n            history.push(`/todos`)\n        }\n    )\n}\n\nfunction validate(values)\n{\n    let errors = {};\n    if (!values.desc) {\n        errors.desc = 'Enter a description'\n    }\n\n    if(!moment(values.date).isValid()) {\n        errors.date = \"Enter a valid target date\"\n    }\n    return errors;\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}