{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log(\"success\");\n    sessionStorage.setItem('authUser', username);\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authUser');\n  }\n\n  userLoggedIn() {\n    let user = sessionStorage.getItem('authUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getUsername() {\n    let user = sessionStorage.getItem('authUser');\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    let username = 'josephxu123';\n    let password = 'password';\n    let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password);\n    console.log(\"interceptors\");\n    axios.interceptors.request.use(config => {\n      if (this.userLoggedIn()) {\n        config.headers.authorization = basicAuthHeader;\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/home/joseph/Desktop/gotrust/todo-app/src/components/todo/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","userLoggedIn","user","getItem","getUsername","basicAuthHeader","window","btoa","interceptors","request","use","config","headers","authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,qBAAN,CAA4B;AACxBC,EAAAA,uBAAuB,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCL,QAAnC;AACA,SAAKM,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLH,IAAAA,cAAc,CAACI,UAAf,CAA0B,UAA1B;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAAX;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;AACnB,WAAO,IAAP;AACH;;AAEDE,EAAAA,WAAW,GAAG;AACV,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAAX;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB,OAAO,EAAP;AACnB,WAAOA,IAAP;AACH;;AAEDJ,EAAAA,sBAAsB,GAAG;AACrB,QAAIN,QAAQ,GAAG,aAAf;AACA,QAAIC,QAAQ,GAAG,UAAf;AAEA,QAAIY,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYf,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,IAAAA,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACR,UAAG,KAAKV,YAAL,EAAH,EAAwB;AACpBU,QAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BR,eAA/B;AACH;;AACD,aAAOM,MAAP;AACH,KANL;AAQH;;AArCuB;;AAwC5B,eAAe,IAAIrB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'; \r\nclass AuthenticationService {\r\n    registerSuccessfulLogin(username, password) {\r\n        console.log(\"success\")\r\n        sessionStorage.setItem('authUser', username);\r\n        this.setupAxiosInterceptors();\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authUser');\r\n    }\r\n\r\n    userLoggedIn() {\r\n        let user = sessionStorage.getItem('authUser');\r\n        if (user === null) return false;\r\n        return true;\r\n    }\r\n\r\n    getUsername() {\r\n        let user = sessionStorage.getItem('authUser');\r\n        if (user === null) return '';\r\n        return user;\r\n    }\r\n\r\n    setupAxiosInterceptors() {\r\n        let username = 'josephxu123';\r\n        let password = 'password';\r\n\r\n        let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password);\r\n        console.log(\"interceptors\");\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if(this.userLoggedIn()) {\r\n                    config.headers.authorization = basicAuthHeader;\r\n                }\r\n                return config;\r\n            } \r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}