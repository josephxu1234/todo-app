{"ast":null,"code":"var _jsxFileName = \"/home/joseph/todo-app/src/components/todo/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UNINIT_LOGIN = 0;\nconst SUCCESS_LOGIN = 1;\nconst FAIL_LOGIN = 2;\n\nfunction Login() {\n  _s();\n\n  const [username, setUsername] = useState('username');\n  const [password, setPassword] = useState('password');\n  const [loginState, setLoginState] = useState(UNINIT_LOGIN);\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      className: \"btn btn-success\",\n      username: username,\n      password: password,\n      setloginstate: setLoginState,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), loginState === SUCCESS_LOGIN && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" LOGIN SUCCESS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }, this), loginState === FAIL_LOGIN && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: \" LOGIN FAIL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"wpNWMbemXMq3tTBD6nYvq3QEMxQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nfunction LoginButton(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginClick(props.username, props.password, props.setloginstate, props.history),\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = LoginButton;\n\nfunction loginClick(username, password, setloginstate, history) {\n  if (username === \"josephxu1234\" && password === \"password\") {\n    AuthenticationService.registerSuccessfulLogin(username, password);\n    console.log(\"Authentication success\");\n    setloginstate(SUCCESS_LOGIN);\n    history.push(`/welcome/${username}`);\n  } else {\n    console.log(\"Failed\");\n    setloginstate(FAIL_LOGIN);\n  }\n}\n\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginButton\");","map":{"version":3,"sources":["/home/joseph/todo-app/src/components/todo/Login.jsx"],"names":["React","useState","useHistory","AuthenticationService","UNINIT_LOGIN","SUCCESS_LOGIN","FAIL_LOGIN","Login","username","setUsername","password","setPassword","loginState","setLoginState","history","event","target","value","LoginButton","props","loginClick","setloginstate","registerSuccessfulLogin","console","log","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,UAAU,GAAG,CAAnB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACG,YAAD,CAA5C;AACA,QAAMU,OAAO,GAAGZ,UAAU,EAA1B;AACA,sBACI;AAAA,4BACI;AAAA,0CAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEM,QAA1C;AAAoD,QAAA,QAAQ,EAAGO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,0CAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEP,QAA1C;AAAoD,QAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAUI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,iBAAvB;AAAyC,MAAA,QAAQ,EAAET,QAAnD;AAA6D,MAAA,QAAQ,EAAEE,QAAvE;AAAiF,MAAA,aAAa,EAAEG,aAAhG;AAA+G,MAAA,OAAO,EAAEC;AAAxH;AAAA;AAAA;AAAA;AAAA,YAVJ,EAWKF,UAAU,KAAKP,aAAf,iBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXrC,EAYKO,UAAU,KAAKN,UAAf,iBAA6B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtBQC,K;UAKWL,U;;;KALXK,K;;AAwBT,SAASW,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,KAAK,CAACX,QAAP,EAAiBW,KAAK,CAACT,QAAvB,EAAiCS,KAAK,CAACE,aAAvC,EAAsDF,KAAK,CAACL,OAA5D,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQI,W;;AAQT,SAASE,UAAT,CAAoBZ,QAApB,EAA8BE,QAA9B,EAAwCW,aAAxC,EAAuDP,OAAvD,EAAgE;AAC5D,MAAIN,QAAQ,KAAK,cAAb,IAA+BE,QAAQ,KAAK,UAAhD,EAA4D;AACxDP,IAAAA,qBAAqB,CAACmB,uBAAtB,CAA8Cd,QAA9C,EAAwDE,QAAxD;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAH,IAAAA,aAAa,CAAChB,aAAD,CAAb;AACAS,IAAAA,OAAO,CAACW,IAAR,CAAc,YAAWjB,QAAS,EAAlC;AACH,GALD,MAMK;AACDe,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,IAAAA,aAAa,CAACf,UAAD,CAAb;AACH;AACJ;;AAED,eAAeC,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst UNINIT_LOGIN = 0;\r\nconst SUCCESS_LOGIN = 1;\r\nconst FAIL_LOGIN = 2;\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('username');\r\n    const [password, setPassword] = useState('password');\r\n    const [loginState, setLoginState] = useState(UNINIT_LOGIN);\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <div>\r\n                Username\r\n                <input type=\"text\" name=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </div>\r\n\r\n            <div>\r\n                Password\r\n                <input type=\"text\" name=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n            </div>\r\n            <LoginButton className=\"btn btn-success\" username={username} password={password} setloginstate={setLoginState} history={history} />\r\n            {loginState === SUCCESS_LOGIN && <div> LOGIN SUCCESS</div>}\r\n            {loginState === FAIL_LOGIN && <div className=\"alert alert-warning\"> LOGIN FAIL</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoginButton(props) {\r\n    return (\r\n        <div>\r\n            <button onClick={() => loginClick(props.username, props.password, props.setloginstate, props.history)}> Login </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction loginClick(username, password, setloginstate, history) {\r\n    if (username === \"josephxu1234\" && password === \"password\") {\r\n        AuthenticationService.registerSuccessfulLogin(username, password);\r\n        console.log(\"Authentication success\");\r\n        setloginstate(SUCCESS_LOGIN);\r\n        history.push(`/welcome/${username}`);\r\n    }\r\n    else {\r\n        console.log(\"Failed\");\r\n        setloginstate(FAIL_LOGIN);\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}