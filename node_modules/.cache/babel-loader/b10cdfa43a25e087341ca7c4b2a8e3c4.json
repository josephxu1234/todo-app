{"ast":null,"code":"import _slicedToArray from\"/home/joseph/Desktop/gotrust/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import moment from'moment';import{Formik,Form,Field,ErrorMessage}from'formik';import TodoService from'../../api/todo/TodoService.js';import AuthenticationService from'./AuthenticationService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Todo(props){var id=props.match.params.id;var name=AuthenticationService.getUsername();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),desc=_useState2[0],setDesc=_useState2[1];var _useState3=useState(moment(new Date()).format('YYYY-MM-DD')),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var history=useHistory();useEffect(function(){if(id==-1){return;}TodoService.retrieveTodo(name,id).then(function(response){setDesc(response.data.description);setDate(moment(response.data.targetDate).format('YYYY-MM-DD'));console.log(\"set\");});});function submit(values){var name=AuthenticationService.getUsername();var todo={id:values.id,description:values.desc,targetDate:values.date};if(id===-1){TodoService.createTodo(name,todo).then(function(){history.push(\"/todos\");});}else{var _name=AuthenticationService.getUsername();TodoService.updateTodo(_name,values.id,todo).then(function(){history.push(\"/todos\");});}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Todo \"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{desc:desc,date:date,id:id},onSubmit:submit,validate:validate,validateOnChange:false,validateOnBlur:false,enableReinitialize:true,children:function children(props){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(ErrorMessage,{name:\"desc\",component:\"div\",className:\"alert alert-warning\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"date\",component:\"div\",className:\"alert alert-warning\"}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\" Description\"}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",type:\"text\",name:\"desc\"})]}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\" Target Date\"}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",type:\"date\",name:\"date\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",type:\"submit\",children:\" Save \"})]});}})})]});}function validate(values){var errors={};if(!values.desc){errors.desc='Enter a description';}if(!moment(values.date).isValid()){errors.date=\"Enter a valid target date\";}return errors;}export default Todo;","map":{"version":3,"sources":["/home/joseph/Desktop/gotrust/todo-app/src/components/todo/Todo.jsx"],"names":["React","useState","useEffect","useHistory","moment","Formik","Form","Field","ErrorMessage","TodoService","AuthenticationService","Todo","props","id","match","params","name","getUsername","desc","setDesc","Date","format","date","setDate","history","retrieveTodo","then","response","data","description","targetDate","console","log","submit","values","todo","createTodo","push","updateTodo","validate","errors","isValid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoService from '../../api/todo/TodoService.js';\nimport AuthenticationService from './AuthenticationService';\n\n\nfunction Todo(props) {\n    let id = props.match.params.id;\n    let name = AuthenticationService.getUsername();\n\n    const [desc, setDesc] = useState('');\n    const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n    const history = useHistory();\n\n    useEffect(() => {\n        if (id == -1) {\n            return;\n        }\n        TodoService.retrieveTodo(name, id).then(\n            response => {\n                setDesc(response.data.description);\n                setDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n                console.log(\"set\");\n            }\n        )\n    })\n\n    function submit(values) {\n        let name = AuthenticationService.getUsername();\n        let todo = {\n            id: values.id,\n            description: values.desc,\n            targetDate: values.date\n        }\n        if (id === -1) {\n\n            TodoService.createTodo(name, todo).then(\n\n                () => {\n                    history.push(`/todos`)\n                }\n            )\n        }\n        else {\n            let name = AuthenticationService.getUsername();\n            TodoService.updateTodo(name, values.id, todo).then(\n\n                () => {\n                    history.push(`/todos`)\n                }\n            )\n        }\n    }\n    return (\n        <div>\n            <h1> Todo </h1>\n            <div className=\"container\">\n                <Formik initialValues={{ desc, date, id }} onSubmit={submit} validate={validate} validateOnChange={false} validateOnBlur={false} enableReinitialize={true}>\n                    {\n                        (props) =>\n                            (\n                                <Form>\n                                    <ErrorMessage name=\"desc\" component=\"div\" className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"date\" component=\"div\" className=\"alert alert-warning\" />\n\n                                    <fieldset className=\"form-group\">\n                                        <label> Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"desc\" />\n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\">\n                                        <label> Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"date\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\"> Save </button>\n                                </Form>\n                            )\n                    }\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\n\n\nfunction validate(values) {\n    let errors = {};\n    if (!values.desc) {\n        errors.desc = 'Enter a description'\n    }\n\n    if (!moment(values.date).isValid()) {\n        errors.date = \"Enter a valid target date\"\n    }\n    return errors;\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}